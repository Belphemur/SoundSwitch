//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoundSwitch.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SettingsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SoundSwitch.Localization.SettingsStrings", typeof(SettingsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play: {0}.
        /// </summary>
        internal static string activePlayback {
            get {
                return ResourceManager.GetString("activePlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rec: {0}.
        /// </summary>
        internal static string activeRecording {
            get {
                return ResourceManager.GetString("activeRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The audio file you selected to be used as notification can&apos;t be found. SoundSwitch switched the notification setting back to {0}..
        /// </summary>
        internal static string audioFileNotFound {
            get {
                return ResourceManager.GetString("audioFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio file not found.
        /// </summary>
        internal static string audioFileNotFoundCaption {
            get {
                return ResourceManager.GetString("audioFileNotFoundCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Files.
        /// </summary>
        internal static string audioFiles {
            get {
                return ResourceManager.GetString("audioFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Settings.
        /// </summary>
        internal static string audioSettings {
            get {
                return ResourceManager.GetString("audioSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic Settings.
        /// </summary>
        internal static string basicSettings {
            get {
                return ResourceManager.GetString("basicSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string close {
            get {
                return ResourceManager.GetString("close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes are automatically saved.
        /// </summary>
        internal static string closeTooltip {
            get {
                return ResourceManager.GetString("closeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Communication Device.
        /// </summary>
        internal static string communication {
            get {
                return ResourceManager.GetString("communication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Default Communication Device.
        /// </summary>
        internal static string communicationsDevice {
            get {
                return ResourceManager.GetString("communicationsDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked, the &apos;Default Communication Device&apos; and &apos;Default Playback Device&apos; are switched together (useful for Skype, TeamSpeak, e.g.)..
        /// </summary>
        internal static string communicationsDeviceTooltip {
            get {
                return ResourceManager.GetString("communicationsDeviceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected.
        /// </summary>
        internal static string connected {
            get {
                return ResourceManager.GetString("connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle through.
        /// </summary>
        internal static string cycleThrough {
            get {
                return ResourceManager.GetString("cycleThrough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All audio devices.
        /// </summary>
        internal static string cycleThroughOptionAllAudioDevices {
            get {
                return ResourceManager.GetString("cycleThroughOptionAllAudioDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only selected audio devices.
        /// </summary>
        internal static string cycleThroughOptionOnlySelectedAudioDevices {
            get {
                return ResourceManager.GetString("cycleThroughOptionOnlySelectedAudioDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose between which devices to switch. Either only between the selected or between all..
        /// </summary>
        internal static string cycleThroughTooltip {
            get {
                return ResourceManager.GetString("cycleThroughTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable the set Custom Sound..
        /// </summary>
        internal static string disableCustomSoundTooltip {
            get {
                return ResourceManager.GetString("disableCustomSoundTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnected.
        /// </summary>
        internal static string disconnected {
            get {
                return ResourceManager.GetString("disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Also switch the foreground program.
        /// </summary>
        internal static string foregroundApp {
            get {
                return ResourceManager.GetString("foregroundApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch also the sound of the currently in use application. Useful with video games..
        /// </summary>
        internal static string foregroundAppTooltip {
            get {
                return ResourceManager.GetString("foregroundAppTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkey enabled.
        /// </summary>
        internal static string hotkeyEnabled {
            get {
                return ResourceManager.GetString("hotkeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkey.
        /// </summary>
        internal static string hotkeys {
            get {
                return ResourceManager.GetString("hotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check to enable hotkey..
        /// </summary>
        internal static string hotkeysTooltip {
            get {
                return ResourceManager.GetString("hotkeysTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Systray Icon.
        /// </summary>
        internal static string iconChange {
            get {
                return ResourceManager.GetString("iconChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose when to change the systray Icon of SoundSwitch.
        ///
        ///Default: Don&apos;t change it. Keep SoundSwitch Icon.
        ///Playback: When a playback device is switched.
        ///Recording: When a recording device is switched.
        ///Both: Change when any type of device is switched..
        /// </summary>
        internal static string iconChange_tooltip {
            get {
                return ResourceManager.GetString("iconChange.tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep SoundSwitch&apos;s System Tray Icon.
        /// </summary>
        internal static string keepSystemTrayIcon {
            get {
                return ResourceManager.GetString("keepSystemTrayIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked, the System Tray Icon won&apos;t change when the &apos;Default Playback Device&apos; changes..
        /// </summary>
        internal static string keepSystemTrayIconTooltip {
            get {
                return ResourceManager.GetString("keepSystemTrayIconTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string language {
            get {
                return ResourceManager.GetString("language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language will change after restarting SoundSwitch.
        ///Do you want to restart now?.
        /// </summary>
        internal static string languageRestartRequired {
            get {
                return ResourceManager.GetString("languageRestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Need a restart.
        /// </summary>
        internal static string languageRestartRequiredCaption {
            get {
                return ResourceManager.GetString("languageRestartRequiredCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification.
        /// </summary>
        internal static string notification {
            get {
                return ResourceManager.GetString("notification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Banner.
        /// </summary>
        internal static string notificationOptionBanner {
            get {
                return ResourceManager.GetString("notificationOptionBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customized Sound Notification.
        /// </summary>
        internal static string notificationOptionCustomized {
            get {
                return ResourceManager.GetString("notificationOptionCustomized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Notification.
        /// </summary>
        internal static string notificationOptionNone {
            get {
                return ResourceManager.GetString("notificationOptionNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound Notification.
        /// </summary>
        internal static string notificationOptionSound {
            get {
                return ResourceManager.GetString("notificationOptionSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toast Notification.
        /// </summary>
        internal static string notificationOptionToast {
            get {
                return ResourceManager.GetString("notificationOptionToast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Notification.
        /// </summary>
        internal static string notificationOptionWindowsDefault {
            get {
                return ResourceManager.GetString("notificationOptionWindowsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Notification: The default windows tray pop-up.
        ///Sound Notification: Plays a sound on the switched Playback Device.
        ///Customized Sound Notification: Plays the specified sound on the switched Playback Device.
        ///Toast Notification: Uses a special form of the windows tray pop-up version.
        ///Banner: Uses a custom always-on-top frame, useful for in-game usage..
        /// </summary>
        internal static string notificationTooltip {
            get {
                return ResourceManager.GetString("notificationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playback.
        /// </summary>
        internal static string playback {
            get {
                return ResourceManager.GetString("playback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        internal static string profile_addButton {
            get {
                return ResourceManager.GetString("profile.addButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        internal static string profile_button_edit {
            get {
                return ResourceManager.GetString("profile.button.edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        internal static string profile_button_save {
            get {
                return ResourceManager.GetString("profile.button.save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Also switch default device.
        /// </summary>
        internal static string profile_defaultDevice_checkbox {
            get {
                return ResourceManager.GetString("profile.defaultDevice.checkbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the application is detected, SoundSwitch will change also the current default device..
        /// </summary>
        internal static string profile_defaultDevice_checkbox_tooltip {
            get {
                return ResourceManager.GetString("profile.defaultDevice.checkbox.tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string profile_deleteButton {
            get {
                return ResourceManager.GetString("profile.deleteButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string profile_desc {
            get {
                return ResourceManager.GetString("profile.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application {0} already has a linked profile..
        /// </summary>
        internal static string profile_error_application {
            get {
                return ResourceManager.GetString("profile.error.application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find the profile..
        /// </summary>
        internal static string profile_error_delete {
            get {
                return ResourceManager.GetString("profile.error.delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device {0} couldn&apos;t be found..
        /// </summary>
        internal static string profile_error_device_not_found {
            get {
                return ResourceManager.GetString("profile.error.device-not-found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This hotkey {0} is already registered..
        /// </summary>
        internal static string profile_error_hotkey {
            get {
                return ResourceManager.GetString("profile.error.hotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a profile named {0}..
        /// </summary>
        internal static string profile_error_name {
            get {
                return ResourceManager.GetString("profile.error.name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to set the hotkey or/and the application..
        /// </summary>
        internal static string profile_error_needHKOrPath {
            get {
                return ResourceManager.GetString("profile.error.needHKOrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to set a playback-, or recording device..
        /// </summary>
        internal static string profile_error_needPlaybackOrRecording {
            get {
                return ResourceManager.GetString("profile.error.needPlaybackOrRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A profile needs a name..
        /// </summary>
        internal static string profile_error_no_name {
            get {
                return ResourceManager.GetString("profile.error.no-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t register hotkey for the following profiles: {0}.
        /// </summary>
        internal static string profile_error_registerHotkeys {
            get {
                return ResourceManager.GetString("profile.error.registerHotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already used hotkey.
        /// </summary>
        internal static string profile_error_registerHotkeys_title {
            get {
                return ResourceManager.GetString("profile.error.registerHotkeys.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only have one profile for Steam Big Picture..
        /// </summary>
        internal static string profile_error_steam {
            get {
                return ResourceManager.GetString("profile.error.steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Error.
        /// </summary>
        internal static string profile_error_title {
            get {
                return ResourceManager.GetString("profile.error.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need minimum one trigger..
        /// </summary>
        internal static string profile_error_triggers_min {
            get {
                return ResourceManager.GetString("profile.error.triggers.min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a profile with this window name: {0}..
        /// </summary>
        internal static string profile_error_window {
            get {
                return ResourceManager.GetString("profile.error.window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a profile to switch to a certain playback or recording device, when a specific application is started or focused..
        /// </summary>
        internal static string profile_explanation {
            get {
                return ResourceManager.GetString("profile.explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Profile.
        /// </summary>
        internal static string profile_feature_add {
            get {
                return ResourceManager.GetString("profile.feature.add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executable (*.exe).
        /// </summary>
        internal static string profile_feature_executable {
            get {
                return ResourceManager.GetString("profile.feature.executable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile.
        /// </summary>
        internal static string profile_feature_profile {
            get {
                return ResourceManager.GetString("profile.feature.profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string profile_name {
            get {
                return ResourceManager.GetString("profile.name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile {0} triggered.
        /// </summary>
        internal static string profile_notification_text {
            get {
                return ResourceManager.GetString("profile.notification.text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify when profile is triggered.
        /// </summary>
        internal static string profile_notify_on_activation {
            get {
                return ResourceManager.GetString("profile.notify-on-activation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        internal static string profile_program {
            get {
                return ResourceManager.GetString("profile.program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles.
        /// </summary>
        internal static string profile_tab {
            get {
                return ResourceManager.GetString("profile.tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Triggers.
        /// </summary>
        internal static string profile_trigger_actives {
            get {
                return ResourceManager.GetString("profile.trigger.actives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Triggers.
        /// </summary>
        internal static string profile_trigger_available {
            get {
                return ResourceManager.GetString("profile.trigger.available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkey used to activate the profile.
        /// </summary>
        internal static string profile_trigger_hotkey_desc {
            get {
                return ResourceManager.GetString("profile.trigger.hotkey.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application path.
        /// </summary>
        internal static string profile_trigger_process {
            get {
                return ResourceManager.GetString("profile.trigger.process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate the profile when the selected application is in the foreground.
        /// </summary>
        internal static string profile_trigger_process_desc {
            get {
                return ResourceManager.GetString("profile.trigger.process.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore devices when trigger ends.
        /// </summary>
        internal static string profile_trigger_restoreDevices {
            get {
                return ResourceManager.GetString("profile.trigger.restoreDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires &quot;{0}&quot; to be enabled.
        ///
        ///Restore the state of the system when the application is closed..
        /// </summary>
        internal static string profile_trigger_restoreDevices_desc {
            get {
                return ResourceManager.GetString("profile.trigger.restoreDevices.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System state restored.
        /// </summary>
        internal static string profile_trigger_restoreDevices_title {
            get {
                return ResourceManager.GetString("profile.trigger.restoreDevices.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On Startup.
        /// </summary>
        internal static string profile_trigger_startup {
            get {
                return ResourceManager.GetString("profile.trigger.startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile will be triggered automatically when SoundSwitch starts.
        /// </summary>
        internal static string profile_trigger_startup_desc {
            get {
                return ResourceManager.GetString("profile.trigger.startup.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Big Picture.
        /// </summary>
        internal static string profile_trigger_steam {
            get {
                return ResourceManager.GetString("profile.trigger.steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate when Steam Big Picture is detected. Will restore the state when Big Picture is closed..
        /// </summary>
        internal static string profile_trigger_steam_desc {
            get {
                return ResourceManager.GetString("profile.trigger.steam.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Store app.
        /// </summary>
        internal static string profile_trigger_uwp {
            get {
                return ResourceManager.GetString("profile.trigger.uwp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application installed through the windows store. Like Netflix, Amazon Prime video, etc ....
        /// </summary>
        internal static string profile_trigger_uwp_desc {
            get {
                return ResourceManager.GetString("profile.trigger.uwp.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the program.
        /// </summary>
        internal static string profile_trigger_window {
            get {
                return ResourceManager.GetString("profile.trigger.window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate the profile if the foregound program contains the following characters.
        /// </summary>
        internal static string profile_trigger_window_desc {
            get {
                return ResourceManager.GetString("profile.trigger.window.desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording.
        /// </summary>
        internal static string recording {
            get {
                return ResourceManager.GetString("recording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected.
        /// </summary>
        internal static string selected {
            get {
                return ResourceManager.GetString("selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the sound file for the notification.
        /// </summary>
        internal static string selectSoundButtonTooltip {
            get {
                return ResourceManager.GetString("selectSoundButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string settings {
            get {
                return ResourceManager.GetString("settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start automatically with Windows.
        /// </summary>
        internal static string startWithWindows {
            get {
                return ResourceManager.GetString("startWithWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tooltip on Hover.
        /// </summary>
        internal static string tooltipOnHover {
            get {
                return ResourceManager.GetString("tooltipOnHover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For both Devices.
        /// </summary>
        internal static string tooltipOnHoverOptionBothDevices {
            get {
                return ResourceManager.GetString("tooltipOnHoverOptionBothDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Tooltip.
        /// </summary>
        internal static string tooltipOnHoverOptionNone {
            get {
                return ResourceManager.GetString("tooltipOnHoverOptionNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playback Device.
        /// </summary>
        internal static string tooltipOnHoverOptionPlaybackDevice {
            get {
                return ResourceManager.GetString("tooltipOnHoverOptionPlaybackDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording Device.
        /// </summary>
        internal static string tooltipOnHoverOptionRecordingDevice {
            get {
                return ResourceManager.GetString("tooltipOnHoverOptionRecordingDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Beta versions.
        /// </summary>
        internal static string updateIncludeBetaVersions {
            get {
                return ResourceManager.GetString("updateIncludeBetaVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked, SoundSwitch will also check for Beta versions on GitHub..
        /// </summary>
        internal static string updateIncludeBetaVersionsTooltip {
            get {
                return ResourceManager.GetString("updateIncludeBetaVersionsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install updates automatically.
        /// </summary>
        internal static string updateInstallAutomatically {
            get {
                return ResourceManager.GetString("updateInstallAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates are installed automatically without any prompts..
        /// </summary>
        internal static string updateInstallAutomaticallyTooltip {
            get {
                return ResourceManager.GetString("updateInstallAutomaticallyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never check for updates.
        /// </summary>
        internal static string updateNever {
            get {
                return ResourceManager.GetString("updateNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t update the program unless you do it manually..
        /// </summary>
        internal static string updateNeverTooltip {
            get {
                return ResourceManager.GetString("updateNeverTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify me when updates are available.
        /// </summary>
        internal static string updateNotify {
            get {
                return ResourceManager.GetString("updateNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SoundSwitch will notify you when there is a new update available. When clicking on the notification, you&apos;ll get a popup downloading the update for you and asking if you want to install it..
        /// </summary>
        internal static string updateNotifyTooltip {
            get {
                return ResourceManager.GetString("updateNotifyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Settings.
        /// </summary>
        internal static string updateSettings {
            get {
                return ResourceManager.GetString("updateSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always use primary screen.
        /// </summary>
        internal static string usePrimaryScreen {
            get {
                return ResourceManager.GetString("usePrimaryScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display banner on primary screen instead of focused screen..
        /// </summary>
        internal static string usePrimaryScreenTooltip {
            get {
                return ResourceManager.GetString("usePrimaryScreenTooltip", resourceCulture);
            }
        }
    }
}
